name: Build and Release
on:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always
  PKG_CONFIG_SYSROOT_DIR: /
  PROJECT_NAME: fnc # Assuming 'fnc' is your project name

jobs:
  build_and_release:
    name: Build and Release
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - name: macos-amd64
            runner: macos-latest
            target: x86_64-apple-darwin
          - name: macos-arm64
            runner: macos-latest
            target: aarch64-apple-darwin

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Setup Cache
        uses: Swatinem/rust-cache@v2

      - name: Install OpenSSL (macOS)
        run: |
          brew update
          brew install openssl@3
          echo 'export PATH="/usr/local/opt/openssl@3/bin:$PATH"' >> ~/.bash_profile
          echo 'export LDFLAGS="-L/usr/local/opt/openssl@3/lib"' >> ~/.bash_profile
          echo 'export CPPFLAGS="-I/usr/local/opt/openssl@3/include"' >> ~/.bash_profile
          echo 'export PKG_CONFIG_PATH="/usr/local/opt/openssl@3/lib/pkgconfig"' >> ~/.bash_profile
          source ~/.bash_profile

      - name: Check OpenSSL installation
        run: |
          which openssl
          openssl version
          echo $PATH
          ls -l /opt/homebrew/opt/openssl@1.1 || echo "OpenSSL 1.1 not found in expected location"
          ls -l /opt/homebrew/Cellar/openssl@1.1 || echo "OpenSSL 1.1 not found in Cellar"

      - name: Set up OpenSSL environment
        run: |
          echo 'export PATH="/opt/homebrew/opt/openssl@1.1/bin:$PATH"' >> ~/.bash_profile
          echo 'export LDFLAGS="-L/opt/homebrew/opt/openssl@1.1/lib"' >> ~/.bash_profile
          echo 'export CPPFLAGS="-I/opt/homebrew/opt/openssl@1.1/include"' >> ~/.bash_profile
          echo 'export PKG_CONFIG_PATH="/opt/homebrew/opt/openssl@1.1/lib/pkgconfig"' >> ~/.bash_profile
          source ~/.bash_profile

      - name: Build Binary
        run: cargo build --verbose --locked --release --target ${{ matrix.target }}
        env:
          OPENSSL_DIR: /opt/homebrew/opt/openssl@1.1
          OPENSSL_LIB_DIR: /opt/homebrew/opt/openssl@1.1/lib
          OPENSSL_INCLUDE_DIR: /opt/homebrew/opt/openssl@1.1/include

      - name: Package Binary
        shell: bash
        run: |
          mkdir -p release
          cp target/${{ matrix.target }}/release/${PROJECT_NAME} release/
          cd release
          tar -czf ../${PROJECT_NAME}-${{ matrix.name }}.tar.gz *
          cd ..

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${PROJECT_NAME}-${{ matrix.name }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
